plugins {
    id 'com.gradle.plugin-publish'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'jacoco'
    id 'signing'
    id 'com.github.hierynomus.license'
    id 'maven-publish'
}

group rootProject.group
description = 'Plugins to aid in the unit test of Jenkins Groovy Libs'

repositories {
    mavenCentral()
    maven {
        url "https://repo.jenkins-ci.org/releases/"
    }
}

dependencies {
    testImplementation(libs.bundles.spock) {
        exclude group: 'org.codehaus.groovy'
    }
    testImplementation "org.jetbrains:annotations:16.0.2"
}

test {
    useJUnitPlatform()
}

gradlePlugin {

    plugins {
        groovyCpsPlugin {
            id = 'com.blackbuild.jenkins.groovy-cps'
            displayName = 'groovy-cps-plugin'
            description = 'A plugin that allows building groovy-cps transformed classes in Gradle.'
            implementationClass = 'com.blackbuild.groovycps.plugin.GroovyCpsPlugin'
        }
        jenkinsDependenciesPlugin {
            id = 'com.blackbuild.jenkins.dependencies'
            displayName = 'jenkins-dependencies-plugin'
            description = 'Plugin to conventiently build a classpath for an existing jenkins installation'
            implementationClass = 'com.blackbuild.groovycps.jenkins.JenkinsDependenciesPlugin'
        }
        jenkinsSharedLibPlugin {
            id = 'com.blackbuild.jenkins.shared-lib'
            displayName = 'jenkins-shared-lib-plugin'
            description = 'Plugin to help running real unit test for Jenkins Groovy Libs (formally Shared Groovy Libs)'
            implementationClass = 'com.blackbuild.groovycps.sharedlib.JenkinsSharedLibPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/blackbuild/jenkins-groovy-lib-utils'
    vcsUrl = 'https://github.com/blackbuild/jenkins-groovy-lib-utils.git'
    description = project.description
    tags = ['testing', 'groovy', 'cps', 'jenkins']
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

jacoco {
    toolVersion = "0.8.2"
}

tasks.register('generatePluginVersionMarker', org.gradle.api.tasks.WriteProperties) {
    outputFile = file("${buildDir}/com.blackbuild.jenkins.groovy-cps.properties")
    comment = "current plugin version"
    property("version", project.version)
}
processResources {
    from files(tasks.generatePluginVersionMarker)
}
tasks.test.dependsOn(project(":ast-checker").tasks.publishToMavenLocal)

publishing {
    publications {
        pluginMaven(MavenPublication) {
            pom { pom ->
                name = project.name
                description = project.description
                rootProject.configurePom(pom)
            }
        }
    }
    afterEvaluate {
        publications.groovyCpsPluginPluginMarkerMaven.pom { pom ->
            rootProject.configurePom(pom)
        }
        publications.jenkinsDependenciesPluginPluginMarkerMaven.pom { pom ->
            rootProject.configurePom(pom)
        }
        publications.jenkinsSharedLibPluginPluginMarkerMaven.pom { pom ->
            rootProject.configurePom(pom)
        }
    }
}

license {
    header = rootProject.file("LICENSE")
    mapping("java", "SLASHSTAR_STYLE")
    mapping("groovy", "SLASHSTAR_STYLE")
    strictCheck(true)
    exclude("**/.groovyCompile.groovy")
}
